version: "3"
services:
  go:
    build:
      context: .
      dockerfile: ./docker/golang/Dockerfile
    container_name: go
    volumes:
      - ./go-app:/app/go
    ports:
      - 8000:8000
    environment:
      - GOOSE_DRIVER=mysql
      - GOOSE_DBSTRING=docker:docker@tcp(db:3306)/time_scheduler
      - GOOSE_DBSTRING_TEST=docker:docker@tcp(test-db:3307)/time_scheduler_test
    depends_on:
      - db
    networks:
      - time-scheduler_backend
  db:
    container_name: db
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_DATABASE: time_scheduler
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: "Asia/Tokyo"
    volumes:
      - ./docker/mysql/mysql_data:/var/lib/mysql
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
      - time-scheduler_backend
  test-db:
    container_name: test-db
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: docker
      MYSQL_DATABASE: time_scheduler_test
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: "Asia/Tokyo"
    volumes:
      - ./docker/mysql/mysql_data_test:/var/lib/mysql
      - ./docker/mysql/initdb_test.d:/docker-entrypoint-initdb.d
    ports:
      - 3307:3306
    networks:
      - time-scheduler_backend
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - time-scheduler_backend
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - 8081:8080
    volumes:
      - ./go-app/docs:/docs
    environment:
      SWAGGER_JSON: /docs/swagger.yml
    networks:
      - time-scheduler_backend
  swagger-editor:
    image: swaggerapi/swagger-editor
    ports:
      - 8082:8080
    volumes:
      - ./go-app/docs:/docs
    environment:
      SWAGGER_FILE: /docs/swagger.yml
networks:
  time-scheduler_backend:
